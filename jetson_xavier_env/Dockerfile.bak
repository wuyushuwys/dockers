ARG JETSON_VERSION=r32.4.4
FROM --platform=linux/arrch64 nvcr.io/nvidia/l4t-base:${JETSON_VERSION}
LABEL maintainer="Yushu Wu <wu.yushu@northeastern.edu>"

ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDA_DRIVER_CAPABILITIES=compute,utility,graphics

#
# install prerequisites (many of these are for numpy)
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
            python3-pip \
		  python3-dev \
		  libopenblas-dev \
		  libopenmpi2 \
            openmpi-bin \
            openmpi-common \
		  gfortran \
          libopenblas-base \
          libopenmpi-dev 


# Install python3 package
RUN pip3 install setuptools Cython wheel
RUN pip3 install numpy --verbose

# Install pytorch 1.7
ARG PYTORCH_URL=https://nvidia.box.com/shared/static/wa34qwrwtk9njtyarwt5nvo6imenfy26.whl
ARG PYTORCH_WHL=torch-1.7.0-cp36-cp36m-linux_aarch64.whl

RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${PYTORCH_URL} -O ${PYTORCH_WHL} && \
    pip3 install ${PYTORCH_WHL} --verbose && \
    rm ${PYTORCH_WHL}

# Install torchvision v0.8.1
ARG TORCHVISION_VERSION=v0.8.1
RUN apt-get install -y --no-install-recommends \
        libjpeg-dev \
        zlib1g-dev \
        libpython3-dev \
        libavcodec-dev \
        git \
        vim \
        cmake \
        build-essential \
        wget \
        pkg-config \
        libv4l-dev

RUN git clone --branch ${TORCHVISION_VERSION}  https://github.com/pytorch/vision torchvision && \
    cd torchvision && \
    export BUILD_VERSION=0.8.1 && \
    python3 setup.py install && \
    pip3 install pillow && \
    cd ../ && rm -rf torchvision

# Install torchaudio v0.7.0
ARG TORCHAUDIO_VERSION=v0.7.0
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        sox \
        libsox-dev \
        libsox-fmt-all

RUN git clone -b ${TORCHAUDIO_VERSION} https://github.com/pytorch/audio torchaudio && \
    cd torchaudio && \
    python3 setup.py install && \
    cd ../ && \
    rm -rf torchaudio

# 
# PyCUDA
#
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"
RUN echo "$PATH" && echo "$LD_LIBRARY_PATH"

RUN pip3 install pycuda --verbose
